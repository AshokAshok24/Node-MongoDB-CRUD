{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Node-MongoDB CRUD-API's",
    "description": "A CRUD Operation by Nodejs and MongoDB with JOI Validation Library"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development"
    },
    {
      "url": "http://localhost:8000",
      "description": "Production"
    }
  ],
  "paths": {
    "/users/getbyid/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a Users By Id...!",
        "description": "Endpoint to Get a Users.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/add": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Addinng a New User...!",
        "description": "Endpoint to Adding a User.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "string",
                "email": "example@gmail.com",
                "password": "string",
                "dob": "06/24/2000",
                "mobile": "88223XXXX"
              }
            }
          }
        }
      }
    },
    "/users/update/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a Users By Id...!",
        "description": "Endpoint to Update a Users.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "String"
              }
            }
          }
        }
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a Users By Id...!",
        "description": "Endpoint to Delete a Users.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/index": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all Users With Search By Name...!",
        "description": "Endpoint to Listing all Users.",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchByField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "x-auth-token",
        "scheme": "bearer",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}